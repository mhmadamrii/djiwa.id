/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestingImport } from './routes/testing'
import { Route as LoginImport } from './routes/login'
import { Route as DashboardUserImport } from './routes/dashboard-user'
import { Route as IndexImport } from './routes/index'
import { Route as MainLayoutCategoryImport } from './routes/_mainLayout/category'
import { Route as MainLayoutMainImport } from './routes/_mainLayout/_main'
import { Route as AuthLayoutAuthImport } from './routes/_authLayout/auth'
import { Route as MainLayoutMainPublishingImport } from './routes/_mainLayout/_main.publishing'
import { Route as MainLayoutMainMySalesImport } from './routes/_mainLayout/_main.my-sales'
import { Route as MainLayoutMainMyModelsImport } from './routes/_mainLayout/_main.my-models'
import { Route as MainLayoutMainDashboardImport } from './routes/_mainLayout/_main.dashboard'

// Create/Update Routes

const TestingRoute = TestingImport.update({
  id: '/testing',
  path: '/testing',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardUserRoute = DashboardUserImport.update({
  id: '/dashboard-user',
  path: '/dashboard-user',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MainLayoutCategoryRoute = MainLayoutCategoryImport.update({
  id: '/_mainLayout/category',
  path: '/category',
  getParentRoute: () => rootRoute,
} as any)

const MainLayoutMainRoute = MainLayoutMainImport.update({
  id: '/_mainLayout/_main',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutAuthRoute = AuthLayoutAuthImport.update({
  id: '/_authLayout/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const MainLayoutMainPublishingRoute = MainLayoutMainPublishingImport.update({
  id: '/publishing',
  path: '/publishing',
  getParentRoute: () => MainLayoutMainRoute,
} as any)

const MainLayoutMainMySalesRoute = MainLayoutMainMySalesImport.update({
  id: '/my-sales',
  path: '/my-sales',
  getParentRoute: () => MainLayoutMainRoute,
} as any)

const MainLayoutMainMyModelsRoute = MainLayoutMainMyModelsImport.update({
  id: '/my-models',
  path: '/my-models',
  getParentRoute: () => MainLayoutMainRoute,
} as any)

const MainLayoutMainDashboardRoute = MainLayoutMainDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => MainLayoutMainRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard-user': {
      id: '/dashboard-user'
      path: '/dashboard-user'
      fullPath: '/dashboard-user'
      preLoaderRoute: typeof DashboardUserImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/testing': {
      id: '/testing'
      path: '/testing'
      fullPath: '/testing'
      preLoaderRoute: typeof TestingImport
      parentRoute: typeof rootRoute
    }
    '/_authLayout/auth': {
      id: '/_authLayout/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLayoutAuthImport
      parentRoute: typeof rootRoute
    }
    '/_mainLayout/_main': {
      id: '/_mainLayout/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainLayoutMainImport
      parentRoute: typeof rootRoute
    }
    '/_mainLayout/category': {
      id: '/_mainLayout/category'
      path: '/category'
      fullPath: '/category'
      preLoaderRoute: typeof MainLayoutCategoryImport
      parentRoute: typeof rootRoute
    }
    '/_mainLayout/_main/dashboard': {
      id: '/_mainLayout/_main/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof MainLayoutMainDashboardImport
      parentRoute: typeof MainLayoutMainImport
    }
    '/_mainLayout/_main/my-models': {
      id: '/_mainLayout/_main/my-models'
      path: '/my-models'
      fullPath: '/my-models'
      preLoaderRoute: typeof MainLayoutMainMyModelsImport
      parentRoute: typeof MainLayoutMainImport
    }
    '/_mainLayout/_main/my-sales': {
      id: '/_mainLayout/_main/my-sales'
      path: '/my-sales'
      fullPath: '/my-sales'
      preLoaderRoute: typeof MainLayoutMainMySalesImport
      parentRoute: typeof MainLayoutMainImport
    }
    '/_mainLayout/_main/publishing': {
      id: '/_mainLayout/_main/publishing'
      path: '/publishing'
      fullPath: '/publishing'
      preLoaderRoute: typeof MainLayoutMainPublishingImport
      parentRoute: typeof MainLayoutMainImport
    }
  }
}

// Create and export the route tree

interface MainLayoutMainRouteChildren {
  MainLayoutMainDashboardRoute: typeof MainLayoutMainDashboardRoute
  MainLayoutMainMyModelsRoute: typeof MainLayoutMainMyModelsRoute
  MainLayoutMainMySalesRoute: typeof MainLayoutMainMySalesRoute
  MainLayoutMainPublishingRoute: typeof MainLayoutMainPublishingRoute
}

const MainLayoutMainRouteChildren: MainLayoutMainRouteChildren = {
  MainLayoutMainDashboardRoute: MainLayoutMainDashboardRoute,
  MainLayoutMainMyModelsRoute: MainLayoutMainMyModelsRoute,
  MainLayoutMainMySalesRoute: MainLayoutMainMySalesRoute,
  MainLayoutMainPublishingRoute: MainLayoutMainPublishingRoute,
}

const MainLayoutMainRouteWithChildren = MainLayoutMainRoute._addFileChildren(
  MainLayoutMainRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard-user': typeof DashboardUserRoute
  '/login': typeof LoginRoute
  '/testing': typeof TestingRoute
  '/auth': typeof AuthLayoutAuthRoute
  '': typeof MainLayoutMainRouteWithChildren
  '/category': typeof MainLayoutCategoryRoute
  '/dashboard': typeof MainLayoutMainDashboardRoute
  '/my-models': typeof MainLayoutMainMyModelsRoute
  '/my-sales': typeof MainLayoutMainMySalesRoute
  '/publishing': typeof MainLayoutMainPublishingRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard-user': typeof DashboardUserRoute
  '/login': typeof LoginRoute
  '/testing': typeof TestingRoute
  '/auth': typeof AuthLayoutAuthRoute
  '': typeof MainLayoutMainRouteWithChildren
  '/category': typeof MainLayoutCategoryRoute
  '/dashboard': typeof MainLayoutMainDashboardRoute
  '/my-models': typeof MainLayoutMainMyModelsRoute
  '/my-sales': typeof MainLayoutMainMySalesRoute
  '/publishing': typeof MainLayoutMainPublishingRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard-user': typeof DashboardUserRoute
  '/login': typeof LoginRoute
  '/testing': typeof TestingRoute
  '/_authLayout/auth': typeof AuthLayoutAuthRoute
  '/_mainLayout/_main': typeof MainLayoutMainRouteWithChildren
  '/_mainLayout/category': typeof MainLayoutCategoryRoute
  '/_mainLayout/_main/dashboard': typeof MainLayoutMainDashboardRoute
  '/_mainLayout/_main/my-models': typeof MainLayoutMainMyModelsRoute
  '/_mainLayout/_main/my-sales': typeof MainLayoutMainMySalesRoute
  '/_mainLayout/_main/publishing': typeof MainLayoutMainPublishingRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard-user'
    | '/login'
    | '/testing'
    | '/auth'
    | ''
    | '/category'
    | '/dashboard'
    | '/my-models'
    | '/my-sales'
    | '/publishing'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard-user'
    | '/login'
    | '/testing'
    | '/auth'
    | ''
    | '/category'
    | '/dashboard'
    | '/my-models'
    | '/my-sales'
    | '/publishing'
  id:
    | '__root__'
    | '/'
    | '/dashboard-user'
    | '/login'
    | '/testing'
    | '/_authLayout/auth'
    | '/_mainLayout/_main'
    | '/_mainLayout/category'
    | '/_mainLayout/_main/dashboard'
    | '/_mainLayout/_main/my-models'
    | '/_mainLayout/_main/my-sales'
    | '/_mainLayout/_main/publishing'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardUserRoute: typeof DashboardUserRoute
  LoginRoute: typeof LoginRoute
  TestingRoute: typeof TestingRoute
  AuthLayoutAuthRoute: typeof AuthLayoutAuthRoute
  MainLayoutMainRoute: typeof MainLayoutMainRouteWithChildren
  MainLayoutCategoryRoute: typeof MainLayoutCategoryRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardUserRoute: DashboardUserRoute,
  LoginRoute: LoginRoute,
  TestingRoute: TestingRoute,
  AuthLayoutAuthRoute: AuthLayoutAuthRoute,
  MainLayoutMainRoute: MainLayoutMainRouteWithChildren,
  MainLayoutCategoryRoute: MainLayoutCategoryRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard-user",
        "/login",
        "/testing",
        "/_authLayout/auth",
        "/_mainLayout/_main",
        "/_mainLayout/category"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard-user": {
      "filePath": "dashboard-user.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/testing": {
      "filePath": "testing.tsx"
    },
    "/_authLayout/auth": {
      "filePath": "_authLayout/auth.tsx"
    },
    "/_mainLayout/_main": {
      "filePath": "_mainLayout/_main.tsx",
      "children": [
        "/_mainLayout/_main/dashboard",
        "/_mainLayout/_main/my-models",
        "/_mainLayout/_main/my-sales",
        "/_mainLayout/_main/publishing"
      ]
    },
    "/_mainLayout/category": {
      "filePath": "_mainLayout/category.tsx"
    },
    "/_mainLayout/_main/dashboard": {
      "filePath": "_mainLayout/_main.dashboard.tsx",
      "parent": "/_mainLayout/_main"
    },
    "/_mainLayout/_main/my-models": {
      "filePath": "_mainLayout/_main.my-models.tsx",
      "parent": "/_mainLayout/_main"
    },
    "/_mainLayout/_main/my-sales": {
      "filePath": "_mainLayout/_main.my-sales.tsx",
      "parent": "/_mainLayout/_main"
    },
    "/_mainLayout/_main/publishing": {
      "filePath": "_mainLayout/_main.publishing.tsx",
      "parent": "/_mainLayout/_main"
    }
  }
}
ROUTE_MANIFEST_END */
