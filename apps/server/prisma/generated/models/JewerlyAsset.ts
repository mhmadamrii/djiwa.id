/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * This file exports the `JewerlyAsset` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from '@prisma/client/runtime/library';
import type * as $Enums from '../enums';
import type * as Prisma from '../internal/prismaNamespace';

/**
 * Model JewerlyAsset
 *
 */
export type JewerlyAssetModel =
  runtime.Types.Result.DefaultSelection<Prisma.$JewerlyAssetPayload>;

export type AggregateJewerlyAsset = {
  _count: JewerlyAssetCountAggregateOutputType | null;
  _avg: JewerlyAssetAvgAggregateOutputType | null;
  _sum: JewerlyAssetSumAggregateOutputType | null;
  _min: JewerlyAssetMinAggregateOutputType | null;
  _max: JewerlyAssetMaxAggregateOutputType | null;
};

export type JewerlyAssetAvgAggregateOutputType = {
  price: number | null;
};

export type JewerlyAssetSumAggregateOutputType = {
  price: number | null;
};

export type JewerlyAssetMinAggregateOutputType = {
  id: string | null;
  title: string | null;
  description: string | null;
  price: number | null;
  image_url: string | null;
  category_id: string | null;
  currency: string | null;
  categoryId: string | null;
  userId: string | null;
  created_at: Date | null;
  updated_at: Date | null;
};

export type JewerlyAssetMaxAggregateOutputType = {
  id: string | null;
  title: string | null;
  description: string | null;
  price: number | null;
  image_url: string | null;
  category_id: string | null;
  currency: string | null;
  categoryId: string | null;
  userId: string | null;
  created_at: Date | null;
  updated_at: Date | null;
};

export type JewerlyAssetCountAggregateOutputType = {
  id: number;
  title: number;
  description: number;
  price: number;
  image_url: number;
  category_id: number;
  currency: number;
  categoryId: number;
  userId: number;
  created_at: number;
  updated_at: number;
  _all: number;
};

export type JewerlyAssetAvgAggregateInputType = {
  price?: true;
};

export type JewerlyAssetSumAggregateInputType = {
  price?: true;
};

export type JewerlyAssetMinAggregateInputType = {
  id?: true;
  title?: true;
  description?: true;
  price?: true;
  image_url?: true;
  category_id?: true;
  currency?: true;
  categoryId?: true;
  userId?: true;
  created_at?: true;
  updated_at?: true;
};

export type JewerlyAssetMaxAggregateInputType = {
  id?: true;
  title?: true;
  description?: true;
  price?: true;
  image_url?: true;
  category_id?: true;
  currency?: true;
  categoryId?: true;
  userId?: true;
  created_at?: true;
  updated_at?: true;
};

export type JewerlyAssetCountAggregateInputType = {
  id?: true;
  title?: true;
  description?: true;
  price?: true;
  image_url?: true;
  category_id?: true;
  currency?: true;
  categoryId?: true;
  userId?: true;
  created_at?: true;
  updated_at?: true;
  _all?: true;
};

export type JewerlyAssetAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which JewerlyAsset to aggregate.
   */
  where?: Prisma.JewerlyAssetWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of JewerlyAssets to fetch.
   */
  orderBy?:
    | Prisma.JewerlyAssetOrderByWithRelationInput
    | Prisma.JewerlyAssetOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.JewerlyAssetWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` JewerlyAssets from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` JewerlyAssets.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned JewerlyAssets
   **/
  _count?: true | JewerlyAssetCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: JewerlyAssetAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: JewerlyAssetSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: JewerlyAssetMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: JewerlyAssetMaxAggregateInputType;
};

export type GetJewerlyAssetAggregateType<T extends JewerlyAssetAggregateArgs> =
  {
    [P in keyof T & keyof AggregateJewerlyAsset]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : Prisma.GetScalarType<T[P], AggregateJewerlyAsset[P]>
      : Prisma.GetScalarType<T[P], AggregateJewerlyAsset[P]>;
  };

export type JewerlyAssetGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.JewerlyAssetWhereInput;
  orderBy?:
    | Prisma.JewerlyAssetOrderByWithAggregationInput
    | Prisma.JewerlyAssetOrderByWithAggregationInput[];
  by: Prisma.JewerlyAssetScalarFieldEnum[] | Prisma.JewerlyAssetScalarFieldEnum;
  having?: Prisma.JewerlyAssetScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: JewerlyAssetCountAggregateInputType | true;
  _avg?: JewerlyAssetAvgAggregateInputType;
  _sum?: JewerlyAssetSumAggregateInputType;
  _min?: JewerlyAssetMinAggregateInputType;
  _max?: JewerlyAssetMaxAggregateInputType;
};

export type JewerlyAssetGroupByOutputType = {
  id: string;
  title: string;
  description: string;
  price: number;
  image_url: string | null;
  category_id: string;
  currency: string;
  categoryId: string | null;
  userId: string | null;
  created_at: Date;
  updated_at: Date;
  _count: JewerlyAssetCountAggregateOutputType | null;
  _avg: JewerlyAssetAvgAggregateOutputType | null;
  _sum: JewerlyAssetSumAggregateOutputType | null;
  _min: JewerlyAssetMinAggregateOutputType | null;
  _max: JewerlyAssetMaxAggregateOutputType | null;
};

type GetJewerlyAssetGroupByPayload<T extends JewerlyAssetGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<JewerlyAssetGroupByOutputType, T['by']> & {
        [P in keyof T & keyof JewerlyAssetGroupByOutputType]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], JewerlyAssetGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], JewerlyAssetGroupByOutputType[P]>;
      }
    >
  >;

export type JewerlyAssetWhereInput = {
  AND?: Prisma.JewerlyAssetWhereInput | Prisma.JewerlyAssetWhereInput[];
  OR?: Prisma.JewerlyAssetWhereInput[];
  NOT?: Prisma.JewerlyAssetWhereInput | Prisma.JewerlyAssetWhereInput[];
  id?: Prisma.StringFilter<'JewerlyAsset'> | string;
  title?: Prisma.StringFilter<'JewerlyAsset'> | string;
  description?: Prisma.StringFilter<'JewerlyAsset'> | string;
  price?: Prisma.IntFilter<'JewerlyAsset'> | number;
  image_url?: Prisma.StringNullableFilter<'JewerlyAsset'> | string | null;
  category_id?: Prisma.StringFilter<'JewerlyAsset'> | string;
  currency?: Prisma.StringFilter<'JewerlyAsset'> | string;
  categoryId?: Prisma.StringNullableFilter<'JewerlyAsset'> | string | null;
  userId?: Prisma.StringNullableFilter<'JewerlyAsset'> | string | null;
  created_at?: Prisma.DateTimeFilter<'JewerlyAsset'> | Date | string;
  updated_at?: Prisma.DateTimeFilter<'JewerlyAsset'> | Date | string;
  Category?: Prisma.XOR<
    Prisma.CategoryNullableScalarRelationFilter,
    Prisma.CategoryWhereInput
  > | null;
  User?: Prisma.XOR<
    Prisma.UserNullableScalarRelationFilter,
    Prisma.UserWhereInput
  > | null;
  Review?: Prisma.ReviewListRelationFilter;
  Notification?: Prisma.NotificationListRelationFilter;
  Wishlist?: Prisma.WishlistListRelationFilter;
};

export type JewerlyAssetOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  title?: Prisma.SortOrder;
  description?: Prisma.SortOrder;
  price?: Prisma.SortOrder;
  image_url?: Prisma.SortOrderInput | Prisma.SortOrder;
  category_id?: Prisma.SortOrder;
  currency?: Prisma.SortOrder;
  categoryId?: Prisma.SortOrderInput | Prisma.SortOrder;
  userId?: Prisma.SortOrderInput | Prisma.SortOrder;
  created_at?: Prisma.SortOrder;
  updated_at?: Prisma.SortOrder;
  Category?: Prisma.CategoryOrderByWithRelationInput;
  User?: Prisma.UserOrderByWithRelationInput;
  Review?: Prisma.ReviewOrderByRelationAggregateInput;
  Notification?: Prisma.NotificationOrderByRelationAggregateInput;
  Wishlist?: Prisma.WishlistOrderByRelationAggregateInput;
};

export type JewerlyAssetWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    AND?: Prisma.JewerlyAssetWhereInput | Prisma.JewerlyAssetWhereInput[];
    OR?: Prisma.JewerlyAssetWhereInput[];
    NOT?: Prisma.JewerlyAssetWhereInput | Prisma.JewerlyAssetWhereInput[];
    title?: Prisma.StringFilter<'JewerlyAsset'> | string;
    description?: Prisma.StringFilter<'JewerlyAsset'> | string;
    price?: Prisma.IntFilter<'JewerlyAsset'> | number;
    image_url?: Prisma.StringNullableFilter<'JewerlyAsset'> | string | null;
    category_id?: Prisma.StringFilter<'JewerlyAsset'> | string;
    currency?: Prisma.StringFilter<'JewerlyAsset'> | string;
    categoryId?: Prisma.StringNullableFilter<'JewerlyAsset'> | string | null;
    userId?: Prisma.StringNullableFilter<'JewerlyAsset'> | string | null;
    created_at?: Prisma.DateTimeFilter<'JewerlyAsset'> | Date | string;
    updated_at?: Prisma.DateTimeFilter<'JewerlyAsset'> | Date | string;
    Category?: Prisma.XOR<
      Prisma.CategoryNullableScalarRelationFilter,
      Prisma.CategoryWhereInput
    > | null;
    User?: Prisma.XOR<
      Prisma.UserNullableScalarRelationFilter,
      Prisma.UserWhereInput
    > | null;
    Review?: Prisma.ReviewListRelationFilter;
    Notification?: Prisma.NotificationListRelationFilter;
    Wishlist?: Prisma.WishlistListRelationFilter;
  },
  'id'
>;

export type JewerlyAssetOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  title?: Prisma.SortOrder;
  description?: Prisma.SortOrder;
  price?: Prisma.SortOrder;
  image_url?: Prisma.SortOrderInput | Prisma.SortOrder;
  category_id?: Prisma.SortOrder;
  currency?: Prisma.SortOrder;
  categoryId?: Prisma.SortOrderInput | Prisma.SortOrder;
  userId?: Prisma.SortOrderInput | Prisma.SortOrder;
  created_at?: Prisma.SortOrder;
  updated_at?: Prisma.SortOrder;
  _count?: Prisma.JewerlyAssetCountOrderByAggregateInput;
  _avg?: Prisma.JewerlyAssetAvgOrderByAggregateInput;
  _max?: Prisma.JewerlyAssetMaxOrderByAggregateInput;
  _min?: Prisma.JewerlyAssetMinOrderByAggregateInput;
  _sum?: Prisma.JewerlyAssetSumOrderByAggregateInput;
};

export type JewerlyAssetScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.JewerlyAssetScalarWhereWithAggregatesInput
    | Prisma.JewerlyAssetScalarWhereWithAggregatesInput[];
  OR?: Prisma.JewerlyAssetScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.JewerlyAssetScalarWhereWithAggregatesInput
    | Prisma.JewerlyAssetScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<'JewerlyAsset'> | string;
  title?: Prisma.StringWithAggregatesFilter<'JewerlyAsset'> | string;
  description?: Prisma.StringWithAggregatesFilter<'JewerlyAsset'> | string;
  price?: Prisma.IntWithAggregatesFilter<'JewerlyAsset'> | number;
  image_url?:
    | Prisma.StringNullableWithAggregatesFilter<'JewerlyAsset'>
    | string
    | null;
  category_id?: Prisma.StringWithAggregatesFilter<'JewerlyAsset'> | string;
  currency?: Prisma.StringWithAggregatesFilter<'JewerlyAsset'> | string;
  categoryId?:
    | Prisma.StringNullableWithAggregatesFilter<'JewerlyAsset'>
    | string
    | null;
  userId?:
    | Prisma.StringNullableWithAggregatesFilter<'JewerlyAsset'>
    | string
    | null;
  created_at?:
    | Prisma.DateTimeWithAggregatesFilter<'JewerlyAsset'>
    | Date
    | string;
  updated_at?:
    | Prisma.DateTimeWithAggregatesFilter<'JewerlyAsset'>
    | Date
    | string;
};

export type JewerlyAssetCreateInput = {
  id?: string;
  title: string;
  description: string;
  price: number;
  image_url?: string | null;
  category_id: string;
  currency: string;
  created_at?: Date | string;
  updated_at?: Date | string;
  Category?: Prisma.CategoryCreateNestedOneWithoutJewerly_assetsInput;
  User?: Prisma.UserCreateNestedOneWithoutJewerly_assetsInput;
  Review?: Prisma.ReviewCreateNestedManyWithoutJewerlyAssetInput;
  Notification?: Prisma.NotificationCreateNestedManyWithoutJewerlyAssetInput;
  Wishlist?: Prisma.WishlistCreateNestedManyWithoutJewerlyAssetInput;
};

export type JewerlyAssetUncheckedCreateInput = {
  id?: string;
  title: string;
  description: string;
  price: number;
  image_url?: string | null;
  category_id: string;
  currency: string;
  categoryId?: string | null;
  userId?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
  Review?: Prisma.ReviewUncheckedCreateNestedManyWithoutJewerlyAssetInput;
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutJewerlyAssetInput;
  Wishlist?: Prisma.WishlistUncheckedCreateNestedManyWithoutJewerlyAssetInput;
};

export type JewerlyAssetUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  title?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  price?: Prisma.IntFieldUpdateOperationsInput | number;
  image_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  category_id?: Prisma.StringFieldUpdateOperationsInput | string;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  Category?: Prisma.CategoryUpdateOneWithoutJewerly_assetsNestedInput;
  User?: Prisma.UserUpdateOneWithoutJewerly_assetsNestedInput;
  Review?: Prisma.ReviewUpdateManyWithoutJewerlyAssetNestedInput;
  Notification?: Prisma.NotificationUpdateManyWithoutJewerlyAssetNestedInput;
  Wishlist?: Prisma.WishlistUpdateManyWithoutJewerlyAssetNestedInput;
};

export type JewerlyAssetUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  title?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  price?: Prisma.IntFieldUpdateOperationsInput | number;
  image_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  category_id?: Prisma.StringFieldUpdateOperationsInput | string;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  categoryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  Review?: Prisma.ReviewUncheckedUpdateManyWithoutJewerlyAssetNestedInput;
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutJewerlyAssetNestedInput;
  Wishlist?: Prisma.WishlistUncheckedUpdateManyWithoutJewerlyAssetNestedInput;
};

export type JewerlyAssetCreateManyInput = {
  id?: string;
  title: string;
  description: string;
  price: number;
  image_url?: string | null;
  category_id: string;
  currency: string;
  categoryId?: string | null;
  userId?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
};

export type JewerlyAssetUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  title?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  price?: Prisma.IntFieldUpdateOperationsInput | number;
  image_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  category_id?: Prisma.StringFieldUpdateOperationsInput | string;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type JewerlyAssetUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  title?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  price?: Prisma.IntFieldUpdateOperationsInput | number;
  image_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  category_id?: Prisma.StringFieldUpdateOperationsInput | string;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  categoryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type JewerlyAssetListRelationFilter = {
  every?: Prisma.JewerlyAssetWhereInput;
  some?: Prisma.JewerlyAssetWhereInput;
  none?: Prisma.JewerlyAssetWhereInput;
};

export type JewerlyAssetOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type JewerlyAssetCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  title?: Prisma.SortOrder;
  description?: Prisma.SortOrder;
  price?: Prisma.SortOrder;
  image_url?: Prisma.SortOrder;
  category_id?: Prisma.SortOrder;
  currency?: Prisma.SortOrder;
  categoryId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  created_at?: Prisma.SortOrder;
  updated_at?: Prisma.SortOrder;
};

export type JewerlyAssetAvgOrderByAggregateInput = {
  price?: Prisma.SortOrder;
};

export type JewerlyAssetMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  title?: Prisma.SortOrder;
  description?: Prisma.SortOrder;
  price?: Prisma.SortOrder;
  image_url?: Prisma.SortOrder;
  category_id?: Prisma.SortOrder;
  currency?: Prisma.SortOrder;
  categoryId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  created_at?: Prisma.SortOrder;
  updated_at?: Prisma.SortOrder;
};

export type JewerlyAssetMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  title?: Prisma.SortOrder;
  description?: Prisma.SortOrder;
  price?: Prisma.SortOrder;
  image_url?: Prisma.SortOrder;
  category_id?: Prisma.SortOrder;
  currency?: Prisma.SortOrder;
  categoryId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  created_at?: Prisma.SortOrder;
  updated_at?: Prisma.SortOrder;
};

export type JewerlyAssetSumOrderByAggregateInput = {
  price?: Prisma.SortOrder;
};

export type JewerlyAssetScalarRelationFilter = {
  is?: Prisma.JewerlyAssetWhereInput;
  isNot?: Prisma.JewerlyAssetWhereInput;
};

export type JewerlyAssetNullableScalarRelationFilter = {
  is?: Prisma.JewerlyAssetWhereInput | null;
  isNot?: Prisma.JewerlyAssetWhereInput | null;
};

export type JewerlyAssetCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.JewerlyAssetCreateWithoutUserInput,
        Prisma.JewerlyAssetUncheckedCreateWithoutUserInput
      >
    | Prisma.JewerlyAssetCreateWithoutUserInput[]
    | Prisma.JewerlyAssetUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.JewerlyAssetCreateOrConnectWithoutUserInput
    | Prisma.JewerlyAssetCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.JewerlyAssetCreateManyUserInputEnvelope;
  connect?:
    | Prisma.JewerlyAssetWhereUniqueInput
    | Prisma.JewerlyAssetWhereUniqueInput[];
};

export type JewerlyAssetUncheckedCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.JewerlyAssetCreateWithoutUserInput,
        Prisma.JewerlyAssetUncheckedCreateWithoutUserInput
      >
    | Prisma.JewerlyAssetCreateWithoutUserInput[]
    | Prisma.JewerlyAssetUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.JewerlyAssetCreateOrConnectWithoutUserInput
    | Prisma.JewerlyAssetCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.JewerlyAssetCreateManyUserInputEnvelope;
  connect?:
    | Prisma.JewerlyAssetWhereUniqueInput
    | Prisma.JewerlyAssetWhereUniqueInput[];
};

export type JewerlyAssetUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.JewerlyAssetCreateWithoutUserInput,
        Prisma.JewerlyAssetUncheckedCreateWithoutUserInput
      >
    | Prisma.JewerlyAssetCreateWithoutUserInput[]
    | Prisma.JewerlyAssetUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.JewerlyAssetCreateOrConnectWithoutUserInput
    | Prisma.JewerlyAssetCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.JewerlyAssetUpsertWithWhereUniqueWithoutUserInput
    | Prisma.JewerlyAssetUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.JewerlyAssetCreateManyUserInputEnvelope;
  set?:
    | Prisma.JewerlyAssetWhereUniqueInput
    | Prisma.JewerlyAssetWhereUniqueInput[];
  disconnect?:
    | Prisma.JewerlyAssetWhereUniqueInput
    | Prisma.JewerlyAssetWhereUniqueInput[];
  delete?:
    | Prisma.JewerlyAssetWhereUniqueInput
    | Prisma.JewerlyAssetWhereUniqueInput[];
  connect?:
    | Prisma.JewerlyAssetWhereUniqueInput
    | Prisma.JewerlyAssetWhereUniqueInput[];
  update?:
    | Prisma.JewerlyAssetUpdateWithWhereUniqueWithoutUserInput
    | Prisma.JewerlyAssetUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.JewerlyAssetUpdateManyWithWhereWithoutUserInput
    | Prisma.JewerlyAssetUpdateManyWithWhereWithoutUserInput[];
  deleteMany?:
    | Prisma.JewerlyAssetScalarWhereInput
    | Prisma.JewerlyAssetScalarWhereInput[];
};

export type JewerlyAssetUncheckedUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.JewerlyAssetCreateWithoutUserInput,
        Prisma.JewerlyAssetUncheckedCreateWithoutUserInput
      >
    | Prisma.JewerlyAssetCreateWithoutUserInput[]
    | Prisma.JewerlyAssetUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.JewerlyAssetCreateOrConnectWithoutUserInput
    | Prisma.JewerlyAssetCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.JewerlyAssetUpsertWithWhereUniqueWithoutUserInput
    | Prisma.JewerlyAssetUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.JewerlyAssetCreateManyUserInputEnvelope;
  set?:
    | Prisma.JewerlyAssetWhereUniqueInput
    | Prisma.JewerlyAssetWhereUniqueInput[];
  disconnect?:
    | Prisma.JewerlyAssetWhereUniqueInput
    | Prisma.JewerlyAssetWhereUniqueInput[];
  delete?:
    | Prisma.JewerlyAssetWhereUniqueInput
    | Prisma.JewerlyAssetWhereUniqueInput[];
  connect?:
    | Prisma.JewerlyAssetWhereUniqueInput
    | Prisma.JewerlyAssetWhereUniqueInput[];
  update?:
    | Prisma.JewerlyAssetUpdateWithWhereUniqueWithoutUserInput
    | Prisma.JewerlyAssetUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.JewerlyAssetUpdateManyWithWhereWithoutUserInput
    | Prisma.JewerlyAssetUpdateManyWithWhereWithoutUserInput[];
  deleteMany?:
    | Prisma.JewerlyAssetScalarWhereInput
    | Prisma.JewerlyAssetScalarWhereInput[];
};

export type IntFieldUpdateOperationsInput = {
  set?: number;
  increment?: number;
  decrement?: number;
  multiply?: number;
  divide?: number;
};

export type JewerlyAssetCreateNestedManyWithoutCategoryInput = {
  create?:
    | Prisma.XOR<
        Prisma.JewerlyAssetCreateWithoutCategoryInput,
        Prisma.JewerlyAssetUncheckedCreateWithoutCategoryInput
      >
    | Prisma.JewerlyAssetCreateWithoutCategoryInput[]
    | Prisma.JewerlyAssetUncheckedCreateWithoutCategoryInput[];
  connectOrCreate?:
    | Prisma.JewerlyAssetCreateOrConnectWithoutCategoryInput
    | Prisma.JewerlyAssetCreateOrConnectWithoutCategoryInput[];
  createMany?: Prisma.JewerlyAssetCreateManyCategoryInputEnvelope;
  connect?:
    | Prisma.JewerlyAssetWhereUniqueInput
    | Prisma.JewerlyAssetWhereUniqueInput[];
};

export type JewerlyAssetUncheckedCreateNestedManyWithoutCategoryInput = {
  create?:
    | Prisma.XOR<
        Prisma.JewerlyAssetCreateWithoutCategoryInput,
        Prisma.JewerlyAssetUncheckedCreateWithoutCategoryInput
      >
    | Prisma.JewerlyAssetCreateWithoutCategoryInput[]
    | Prisma.JewerlyAssetUncheckedCreateWithoutCategoryInput[];
  connectOrCreate?:
    | Prisma.JewerlyAssetCreateOrConnectWithoutCategoryInput
    | Prisma.JewerlyAssetCreateOrConnectWithoutCategoryInput[];
  createMany?: Prisma.JewerlyAssetCreateManyCategoryInputEnvelope;
  connect?:
    | Prisma.JewerlyAssetWhereUniqueInput
    | Prisma.JewerlyAssetWhereUniqueInput[];
};

export type JewerlyAssetUpdateManyWithoutCategoryNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.JewerlyAssetCreateWithoutCategoryInput,
        Prisma.JewerlyAssetUncheckedCreateWithoutCategoryInput
      >
    | Prisma.JewerlyAssetCreateWithoutCategoryInput[]
    | Prisma.JewerlyAssetUncheckedCreateWithoutCategoryInput[];
  connectOrCreate?:
    | Prisma.JewerlyAssetCreateOrConnectWithoutCategoryInput
    | Prisma.JewerlyAssetCreateOrConnectWithoutCategoryInput[];
  upsert?:
    | Prisma.JewerlyAssetUpsertWithWhereUniqueWithoutCategoryInput
    | Prisma.JewerlyAssetUpsertWithWhereUniqueWithoutCategoryInput[];
  createMany?: Prisma.JewerlyAssetCreateManyCategoryInputEnvelope;
  set?:
    | Prisma.JewerlyAssetWhereUniqueInput
    | Prisma.JewerlyAssetWhereUniqueInput[];
  disconnect?:
    | Prisma.JewerlyAssetWhereUniqueInput
    | Prisma.JewerlyAssetWhereUniqueInput[];
  delete?:
    | Prisma.JewerlyAssetWhereUniqueInput
    | Prisma.JewerlyAssetWhereUniqueInput[];
  connect?:
    | Prisma.JewerlyAssetWhereUniqueInput
    | Prisma.JewerlyAssetWhereUniqueInput[];
  update?:
    | Prisma.JewerlyAssetUpdateWithWhereUniqueWithoutCategoryInput
    | Prisma.JewerlyAssetUpdateWithWhereUniqueWithoutCategoryInput[];
  updateMany?:
    | Prisma.JewerlyAssetUpdateManyWithWhereWithoutCategoryInput
    | Prisma.JewerlyAssetUpdateManyWithWhereWithoutCategoryInput[];
  deleteMany?:
    | Prisma.JewerlyAssetScalarWhereInput
    | Prisma.JewerlyAssetScalarWhereInput[];
};

export type JewerlyAssetUncheckedUpdateManyWithoutCategoryNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.JewerlyAssetCreateWithoutCategoryInput,
        Prisma.JewerlyAssetUncheckedCreateWithoutCategoryInput
      >
    | Prisma.JewerlyAssetCreateWithoutCategoryInput[]
    | Prisma.JewerlyAssetUncheckedCreateWithoutCategoryInput[];
  connectOrCreate?:
    | Prisma.JewerlyAssetCreateOrConnectWithoutCategoryInput
    | Prisma.JewerlyAssetCreateOrConnectWithoutCategoryInput[];
  upsert?:
    | Prisma.JewerlyAssetUpsertWithWhereUniqueWithoutCategoryInput
    | Prisma.JewerlyAssetUpsertWithWhereUniqueWithoutCategoryInput[];
  createMany?: Prisma.JewerlyAssetCreateManyCategoryInputEnvelope;
  set?:
    | Prisma.JewerlyAssetWhereUniqueInput
    | Prisma.JewerlyAssetWhereUniqueInput[];
  disconnect?:
    | Prisma.JewerlyAssetWhereUniqueInput
    | Prisma.JewerlyAssetWhereUniqueInput[];
  delete?:
    | Prisma.JewerlyAssetWhereUniqueInput
    | Prisma.JewerlyAssetWhereUniqueInput[];
  connect?:
    | Prisma.JewerlyAssetWhereUniqueInput
    | Prisma.JewerlyAssetWhereUniqueInput[];
  update?:
    | Prisma.JewerlyAssetUpdateWithWhereUniqueWithoutCategoryInput
    | Prisma.JewerlyAssetUpdateWithWhereUniqueWithoutCategoryInput[];
  updateMany?:
    | Prisma.JewerlyAssetUpdateManyWithWhereWithoutCategoryInput
    | Prisma.JewerlyAssetUpdateManyWithWhereWithoutCategoryInput[];
  deleteMany?:
    | Prisma.JewerlyAssetScalarWhereInput
    | Prisma.JewerlyAssetScalarWhereInput[];
};

export type JewerlyAssetCreateNestedOneWithoutReviewInput = {
  create?: Prisma.XOR<
    Prisma.JewerlyAssetCreateWithoutReviewInput,
    Prisma.JewerlyAssetUncheckedCreateWithoutReviewInput
  >;
  connectOrCreate?: Prisma.JewerlyAssetCreateOrConnectWithoutReviewInput;
  connect?: Prisma.JewerlyAssetWhereUniqueInput;
};

export type JewerlyAssetUpdateOneRequiredWithoutReviewNestedInput = {
  create?: Prisma.XOR<
    Prisma.JewerlyAssetCreateWithoutReviewInput,
    Prisma.JewerlyAssetUncheckedCreateWithoutReviewInput
  >;
  connectOrCreate?: Prisma.JewerlyAssetCreateOrConnectWithoutReviewInput;
  upsert?: Prisma.JewerlyAssetUpsertWithoutReviewInput;
  connect?: Prisma.JewerlyAssetWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.JewerlyAssetUpdateToOneWithWhereWithoutReviewInput,
      Prisma.JewerlyAssetUpdateWithoutReviewInput
    >,
    Prisma.JewerlyAssetUncheckedUpdateWithoutReviewInput
  >;
};

export type JewerlyAssetCreateNestedOneWithoutNotificationInput = {
  create?: Prisma.XOR<
    Prisma.JewerlyAssetCreateWithoutNotificationInput,
    Prisma.JewerlyAssetUncheckedCreateWithoutNotificationInput
  >;
  connectOrCreate?: Prisma.JewerlyAssetCreateOrConnectWithoutNotificationInput;
  connect?: Prisma.JewerlyAssetWhereUniqueInput;
};

export type JewerlyAssetUpdateOneWithoutNotificationNestedInput = {
  create?: Prisma.XOR<
    Prisma.JewerlyAssetCreateWithoutNotificationInput,
    Prisma.JewerlyAssetUncheckedCreateWithoutNotificationInput
  >;
  connectOrCreate?: Prisma.JewerlyAssetCreateOrConnectWithoutNotificationInput;
  upsert?: Prisma.JewerlyAssetUpsertWithoutNotificationInput;
  disconnect?: Prisma.JewerlyAssetWhereInput | boolean;
  delete?: Prisma.JewerlyAssetWhereInput | boolean;
  connect?: Prisma.JewerlyAssetWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.JewerlyAssetUpdateToOneWithWhereWithoutNotificationInput,
      Prisma.JewerlyAssetUpdateWithoutNotificationInput
    >,
    Prisma.JewerlyAssetUncheckedUpdateWithoutNotificationInput
  >;
};

export type JewerlyAssetCreateNestedOneWithoutWishlistInput = {
  create?: Prisma.XOR<
    Prisma.JewerlyAssetCreateWithoutWishlistInput,
    Prisma.JewerlyAssetUncheckedCreateWithoutWishlistInput
  >;
  connectOrCreate?: Prisma.JewerlyAssetCreateOrConnectWithoutWishlistInput;
  connect?: Prisma.JewerlyAssetWhereUniqueInput;
};

export type JewerlyAssetUpdateOneRequiredWithoutWishlistNestedInput = {
  create?: Prisma.XOR<
    Prisma.JewerlyAssetCreateWithoutWishlistInput,
    Prisma.JewerlyAssetUncheckedCreateWithoutWishlistInput
  >;
  connectOrCreate?: Prisma.JewerlyAssetCreateOrConnectWithoutWishlistInput;
  upsert?: Prisma.JewerlyAssetUpsertWithoutWishlistInput;
  connect?: Prisma.JewerlyAssetWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.JewerlyAssetUpdateToOneWithWhereWithoutWishlistInput,
      Prisma.JewerlyAssetUpdateWithoutWishlistInput
    >,
    Prisma.JewerlyAssetUncheckedUpdateWithoutWishlistInput
  >;
};

export type JewerlyAssetCreateWithoutUserInput = {
  id?: string;
  title: string;
  description: string;
  price: number;
  image_url?: string | null;
  category_id: string;
  currency: string;
  created_at?: Date | string;
  updated_at?: Date | string;
  Category?: Prisma.CategoryCreateNestedOneWithoutJewerly_assetsInput;
  Review?: Prisma.ReviewCreateNestedManyWithoutJewerlyAssetInput;
  Notification?: Prisma.NotificationCreateNestedManyWithoutJewerlyAssetInput;
  Wishlist?: Prisma.WishlistCreateNestedManyWithoutJewerlyAssetInput;
};

export type JewerlyAssetUncheckedCreateWithoutUserInput = {
  id?: string;
  title: string;
  description: string;
  price: number;
  image_url?: string | null;
  category_id: string;
  currency: string;
  categoryId?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
  Review?: Prisma.ReviewUncheckedCreateNestedManyWithoutJewerlyAssetInput;
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutJewerlyAssetInput;
  Wishlist?: Prisma.WishlistUncheckedCreateNestedManyWithoutJewerlyAssetInput;
};

export type JewerlyAssetCreateOrConnectWithoutUserInput = {
  where: Prisma.JewerlyAssetWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.JewerlyAssetCreateWithoutUserInput,
    Prisma.JewerlyAssetUncheckedCreateWithoutUserInput
  >;
};

export type JewerlyAssetCreateManyUserInputEnvelope = {
  data:
    | Prisma.JewerlyAssetCreateManyUserInput
    | Prisma.JewerlyAssetCreateManyUserInput[];
  skipDuplicates?: boolean;
};

export type JewerlyAssetUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.JewerlyAssetWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.JewerlyAssetUpdateWithoutUserInput,
    Prisma.JewerlyAssetUncheckedUpdateWithoutUserInput
  >;
  create: Prisma.XOR<
    Prisma.JewerlyAssetCreateWithoutUserInput,
    Prisma.JewerlyAssetUncheckedCreateWithoutUserInput
  >;
};

export type JewerlyAssetUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.JewerlyAssetWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.JewerlyAssetUpdateWithoutUserInput,
    Prisma.JewerlyAssetUncheckedUpdateWithoutUserInput
  >;
};

export type JewerlyAssetUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.JewerlyAssetScalarWhereInput;
  data: Prisma.XOR<
    Prisma.JewerlyAssetUpdateManyMutationInput,
    Prisma.JewerlyAssetUncheckedUpdateManyWithoutUserInput
  >;
};

export type JewerlyAssetScalarWhereInput = {
  AND?:
    | Prisma.JewerlyAssetScalarWhereInput
    | Prisma.JewerlyAssetScalarWhereInput[];
  OR?: Prisma.JewerlyAssetScalarWhereInput[];
  NOT?:
    | Prisma.JewerlyAssetScalarWhereInput
    | Prisma.JewerlyAssetScalarWhereInput[];
  id?: Prisma.StringFilter<'JewerlyAsset'> | string;
  title?: Prisma.StringFilter<'JewerlyAsset'> | string;
  description?: Prisma.StringFilter<'JewerlyAsset'> | string;
  price?: Prisma.IntFilter<'JewerlyAsset'> | number;
  image_url?: Prisma.StringNullableFilter<'JewerlyAsset'> | string | null;
  category_id?: Prisma.StringFilter<'JewerlyAsset'> | string;
  currency?: Prisma.StringFilter<'JewerlyAsset'> | string;
  categoryId?: Prisma.StringNullableFilter<'JewerlyAsset'> | string | null;
  userId?: Prisma.StringNullableFilter<'JewerlyAsset'> | string | null;
  created_at?: Prisma.DateTimeFilter<'JewerlyAsset'> | Date | string;
  updated_at?: Prisma.DateTimeFilter<'JewerlyAsset'> | Date | string;
};

export type JewerlyAssetCreateWithoutCategoryInput = {
  id?: string;
  title: string;
  description: string;
  price: number;
  image_url?: string | null;
  category_id: string;
  currency: string;
  created_at?: Date | string;
  updated_at?: Date | string;
  User?: Prisma.UserCreateNestedOneWithoutJewerly_assetsInput;
  Review?: Prisma.ReviewCreateNestedManyWithoutJewerlyAssetInput;
  Notification?: Prisma.NotificationCreateNestedManyWithoutJewerlyAssetInput;
  Wishlist?: Prisma.WishlistCreateNestedManyWithoutJewerlyAssetInput;
};

export type JewerlyAssetUncheckedCreateWithoutCategoryInput = {
  id?: string;
  title: string;
  description: string;
  price: number;
  image_url?: string | null;
  category_id: string;
  currency: string;
  userId?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
  Review?: Prisma.ReviewUncheckedCreateNestedManyWithoutJewerlyAssetInput;
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutJewerlyAssetInput;
  Wishlist?: Prisma.WishlistUncheckedCreateNestedManyWithoutJewerlyAssetInput;
};

export type JewerlyAssetCreateOrConnectWithoutCategoryInput = {
  where: Prisma.JewerlyAssetWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.JewerlyAssetCreateWithoutCategoryInput,
    Prisma.JewerlyAssetUncheckedCreateWithoutCategoryInput
  >;
};

export type JewerlyAssetCreateManyCategoryInputEnvelope = {
  data:
    | Prisma.JewerlyAssetCreateManyCategoryInput
    | Prisma.JewerlyAssetCreateManyCategoryInput[];
  skipDuplicates?: boolean;
};

export type JewerlyAssetUpsertWithWhereUniqueWithoutCategoryInput = {
  where: Prisma.JewerlyAssetWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.JewerlyAssetUpdateWithoutCategoryInput,
    Prisma.JewerlyAssetUncheckedUpdateWithoutCategoryInput
  >;
  create: Prisma.XOR<
    Prisma.JewerlyAssetCreateWithoutCategoryInput,
    Prisma.JewerlyAssetUncheckedCreateWithoutCategoryInput
  >;
};

export type JewerlyAssetUpdateWithWhereUniqueWithoutCategoryInput = {
  where: Prisma.JewerlyAssetWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.JewerlyAssetUpdateWithoutCategoryInput,
    Prisma.JewerlyAssetUncheckedUpdateWithoutCategoryInput
  >;
};

export type JewerlyAssetUpdateManyWithWhereWithoutCategoryInput = {
  where: Prisma.JewerlyAssetScalarWhereInput;
  data: Prisma.XOR<
    Prisma.JewerlyAssetUpdateManyMutationInput,
    Prisma.JewerlyAssetUncheckedUpdateManyWithoutCategoryInput
  >;
};

export type JewerlyAssetCreateWithoutReviewInput = {
  id?: string;
  title: string;
  description: string;
  price: number;
  image_url?: string | null;
  category_id: string;
  currency: string;
  created_at?: Date | string;
  updated_at?: Date | string;
  Category?: Prisma.CategoryCreateNestedOneWithoutJewerly_assetsInput;
  User?: Prisma.UserCreateNestedOneWithoutJewerly_assetsInput;
  Notification?: Prisma.NotificationCreateNestedManyWithoutJewerlyAssetInput;
  Wishlist?: Prisma.WishlistCreateNestedManyWithoutJewerlyAssetInput;
};

export type JewerlyAssetUncheckedCreateWithoutReviewInput = {
  id?: string;
  title: string;
  description: string;
  price: number;
  image_url?: string | null;
  category_id: string;
  currency: string;
  categoryId?: string | null;
  userId?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutJewerlyAssetInput;
  Wishlist?: Prisma.WishlistUncheckedCreateNestedManyWithoutJewerlyAssetInput;
};

export type JewerlyAssetCreateOrConnectWithoutReviewInput = {
  where: Prisma.JewerlyAssetWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.JewerlyAssetCreateWithoutReviewInput,
    Prisma.JewerlyAssetUncheckedCreateWithoutReviewInput
  >;
};

export type JewerlyAssetUpsertWithoutReviewInput = {
  update: Prisma.XOR<
    Prisma.JewerlyAssetUpdateWithoutReviewInput,
    Prisma.JewerlyAssetUncheckedUpdateWithoutReviewInput
  >;
  create: Prisma.XOR<
    Prisma.JewerlyAssetCreateWithoutReviewInput,
    Prisma.JewerlyAssetUncheckedCreateWithoutReviewInput
  >;
  where?: Prisma.JewerlyAssetWhereInput;
};

export type JewerlyAssetUpdateToOneWithWhereWithoutReviewInput = {
  where?: Prisma.JewerlyAssetWhereInput;
  data: Prisma.XOR<
    Prisma.JewerlyAssetUpdateWithoutReviewInput,
    Prisma.JewerlyAssetUncheckedUpdateWithoutReviewInput
  >;
};

export type JewerlyAssetUpdateWithoutReviewInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  title?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  price?: Prisma.IntFieldUpdateOperationsInput | number;
  image_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  category_id?: Prisma.StringFieldUpdateOperationsInput | string;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  Category?: Prisma.CategoryUpdateOneWithoutJewerly_assetsNestedInput;
  User?: Prisma.UserUpdateOneWithoutJewerly_assetsNestedInput;
  Notification?: Prisma.NotificationUpdateManyWithoutJewerlyAssetNestedInput;
  Wishlist?: Prisma.WishlistUpdateManyWithoutJewerlyAssetNestedInput;
};

export type JewerlyAssetUncheckedUpdateWithoutReviewInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  title?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  price?: Prisma.IntFieldUpdateOperationsInput | number;
  image_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  category_id?: Prisma.StringFieldUpdateOperationsInput | string;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  categoryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutJewerlyAssetNestedInput;
  Wishlist?: Prisma.WishlistUncheckedUpdateManyWithoutJewerlyAssetNestedInput;
};

export type JewerlyAssetCreateWithoutNotificationInput = {
  id?: string;
  title: string;
  description: string;
  price: number;
  image_url?: string | null;
  category_id: string;
  currency: string;
  created_at?: Date | string;
  updated_at?: Date | string;
  Category?: Prisma.CategoryCreateNestedOneWithoutJewerly_assetsInput;
  User?: Prisma.UserCreateNestedOneWithoutJewerly_assetsInput;
  Review?: Prisma.ReviewCreateNestedManyWithoutJewerlyAssetInput;
  Wishlist?: Prisma.WishlistCreateNestedManyWithoutJewerlyAssetInput;
};

export type JewerlyAssetUncheckedCreateWithoutNotificationInput = {
  id?: string;
  title: string;
  description: string;
  price: number;
  image_url?: string | null;
  category_id: string;
  currency: string;
  categoryId?: string | null;
  userId?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
  Review?: Prisma.ReviewUncheckedCreateNestedManyWithoutJewerlyAssetInput;
  Wishlist?: Prisma.WishlistUncheckedCreateNestedManyWithoutJewerlyAssetInput;
};

export type JewerlyAssetCreateOrConnectWithoutNotificationInput = {
  where: Prisma.JewerlyAssetWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.JewerlyAssetCreateWithoutNotificationInput,
    Prisma.JewerlyAssetUncheckedCreateWithoutNotificationInput
  >;
};

export type JewerlyAssetUpsertWithoutNotificationInput = {
  update: Prisma.XOR<
    Prisma.JewerlyAssetUpdateWithoutNotificationInput,
    Prisma.JewerlyAssetUncheckedUpdateWithoutNotificationInput
  >;
  create: Prisma.XOR<
    Prisma.JewerlyAssetCreateWithoutNotificationInput,
    Prisma.JewerlyAssetUncheckedCreateWithoutNotificationInput
  >;
  where?: Prisma.JewerlyAssetWhereInput;
};

export type JewerlyAssetUpdateToOneWithWhereWithoutNotificationInput = {
  where?: Prisma.JewerlyAssetWhereInput;
  data: Prisma.XOR<
    Prisma.JewerlyAssetUpdateWithoutNotificationInput,
    Prisma.JewerlyAssetUncheckedUpdateWithoutNotificationInput
  >;
};

export type JewerlyAssetUpdateWithoutNotificationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  title?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  price?: Prisma.IntFieldUpdateOperationsInput | number;
  image_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  category_id?: Prisma.StringFieldUpdateOperationsInput | string;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  Category?: Prisma.CategoryUpdateOneWithoutJewerly_assetsNestedInput;
  User?: Prisma.UserUpdateOneWithoutJewerly_assetsNestedInput;
  Review?: Prisma.ReviewUpdateManyWithoutJewerlyAssetNestedInput;
  Wishlist?: Prisma.WishlistUpdateManyWithoutJewerlyAssetNestedInput;
};

export type JewerlyAssetUncheckedUpdateWithoutNotificationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  title?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  price?: Prisma.IntFieldUpdateOperationsInput | number;
  image_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  category_id?: Prisma.StringFieldUpdateOperationsInput | string;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  categoryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  Review?: Prisma.ReviewUncheckedUpdateManyWithoutJewerlyAssetNestedInput;
  Wishlist?: Prisma.WishlistUncheckedUpdateManyWithoutJewerlyAssetNestedInput;
};

export type JewerlyAssetCreateWithoutWishlistInput = {
  id?: string;
  title: string;
  description: string;
  price: number;
  image_url?: string | null;
  category_id: string;
  currency: string;
  created_at?: Date | string;
  updated_at?: Date | string;
  Category?: Prisma.CategoryCreateNestedOneWithoutJewerly_assetsInput;
  User?: Prisma.UserCreateNestedOneWithoutJewerly_assetsInput;
  Review?: Prisma.ReviewCreateNestedManyWithoutJewerlyAssetInput;
  Notification?: Prisma.NotificationCreateNestedManyWithoutJewerlyAssetInput;
};

export type JewerlyAssetUncheckedCreateWithoutWishlistInput = {
  id?: string;
  title: string;
  description: string;
  price: number;
  image_url?: string | null;
  category_id: string;
  currency: string;
  categoryId?: string | null;
  userId?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
  Review?: Prisma.ReviewUncheckedCreateNestedManyWithoutJewerlyAssetInput;
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutJewerlyAssetInput;
};

export type JewerlyAssetCreateOrConnectWithoutWishlistInput = {
  where: Prisma.JewerlyAssetWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.JewerlyAssetCreateWithoutWishlistInput,
    Prisma.JewerlyAssetUncheckedCreateWithoutWishlistInput
  >;
};

export type JewerlyAssetUpsertWithoutWishlistInput = {
  update: Prisma.XOR<
    Prisma.JewerlyAssetUpdateWithoutWishlistInput,
    Prisma.JewerlyAssetUncheckedUpdateWithoutWishlistInput
  >;
  create: Prisma.XOR<
    Prisma.JewerlyAssetCreateWithoutWishlistInput,
    Prisma.JewerlyAssetUncheckedCreateWithoutWishlistInput
  >;
  where?: Prisma.JewerlyAssetWhereInput;
};

export type JewerlyAssetUpdateToOneWithWhereWithoutWishlistInput = {
  where?: Prisma.JewerlyAssetWhereInput;
  data: Prisma.XOR<
    Prisma.JewerlyAssetUpdateWithoutWishlistInput,
    Prisma.JewerlyAssetUncheckedUpdateWithoutWishlistInput
  >;
};

export type JewerlyAssetUpdateWithoutWishlistInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  title?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  price?: Prisma.IntFieldUpdateOperationsInput | number;
  image_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  category_id?: Prisma.StringFieldUpdateOperationsInput | string;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  Category?: Prisma.CategoryUpdateOneWithoutJewerly_assetsNestedInput;
  User?: Prisma.UserUpdateOneWithoutJewerly_assetsNestedInput;
  Review?: Prisma.ReviewUpdateManyWithoutJewerlyAssetNestedInput;
  Notification?: Prisma.NotificationUpdateManyWithoutJewerlyAssetNestedInput;
};

export type JewerlyAssetUncheckedUpdateWithoutWishlistInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  title?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  price?: Prisma.IntFieldUpdateOperationsInput | number;
  image_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  category_id?: Prisma.StringFieldUpdateOperationsInput | string;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  categoryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  Review?: Prisma.ReviewUncheckedUpdateManyWithoutJewerlyAssetNestedInput;
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutJewerlyAssetNestedInput;
};

export type JewerlyAssetCreateManyUserInput = {
  id?: string;
  title: string;
  description: string;
  price: number;
  image_url?: string | null;
  category_id: string;
  currency: string;
  categoryId?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
};

export type JewerlyAssetUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  title?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  price?: Prisma.IntFieldUpdateOperationsInput | number;
  image_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  category_id?: Prisma.StringFieldUpdateOperationsInput | string;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  Category?: Prisma.CategoryUpdateOneWithoutJewerly_assetsNestedInput;
  Review?: Prisma.ReviewUpdateManyWithoutJewerlyAssetNestedInput;
  Notification?: Prisma.NotificationUpdateManyWithoutJewerlyAssetNestedInput;
  Wishlist?: Prisma.WishlistUpdateManyWithoutJewerlyAssetNestedInput;
};

export type JewerlyAssetUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  title?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  price?: Prisma.IntFieldUpdateOperationsInput | number;
  image_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  category_id?: Prisma.StringFieldUpdateOperationsInput | string;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  categoryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  Review?: Prisma.ReviewUncheckedUpdateManyWithoutJewerlyAssetNestedInput;
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutJewerlyAssetNestedInput;
  Wishlist?: Prisma.WishlistUncheckedUpdateManyWithoutJewerlyAssetNestedInput;
};

export type JewerlyAssetUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  title?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  price?: Prisma.IntFieldUpdateOperationsInput | number;
  image_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  category_id?: Prisma.StringFieldUpdateOperationsInput | string;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  categoryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type JewerlyAssetCreateManyCategoryInput = {
  id?: string;
  title: string;
  description: string;
  price: number;
  image_url?: string | null;
  category_id: string;
  currency: string;
  userId?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
};

export type JewerlyAssetUpdateWithoutCategoryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  title?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  price?: Prisma.IntFieldUpdateOperationsInput | number;
  image_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  category_id?: Prisma.StringFieldUpdateOperationsInput | string;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  User?: Prisma.UserUpdateOneWithoutJewerly_assetsNestedInput;
  Review?: Prisma.ReviewUpdateManyWithoutJewerlyAssetNestedInput;
  Notification?: Prisma.NotificationUpdateManyWithoutJewerlyAssetNestedInput;
  Wishlist?: Prisma.WishlistUpdateManyWithoutJewerlyAssetNestedInput;
};

export type JewerlyAssetUncheckedUpdateWithoutCategoryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  title?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  price?: Prisma.IntFieldUpdateOperationsInput | number;
  image_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  category_id?: Prisma.StringFieldUpdateOperationsInput | string;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  Review?: Prisma.ReviewUncheckedUpdateManyWithoutJewerlyAssetNestedInput;
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutJewerlyAssetNestedInput;
  Wishlist?: Prisma.WishlistUncheckedUpdateManyWithoutJewerlyAssetNestedInput;
};

export type JewerlyAssetUncheckedUpdateManyWithoutCategoryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  title?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.StringFieldUpdateOperationsInput | string;
  price?: Prisma.IntFieldUpdateOperationsInput | number;
  image_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  category_id?: Prisma.StringFieldUpdateOperationsInput | string;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

/**
 * Count Type JewerlyAssetCountOutputType
 */

export type JewerlyAssetCountOutputType = {
  Review: number;
  Notification: number;
  Wishlist: number;
};

export type JewerlyAssetCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  Review?: boolean | JewerlyAssetCountOutputTypeCountReviewArgs;
  Notification?: boolean | JewerlyAssetCountOutputTypeCountNotificationArgs;
  Wishlist?: boolean | JewerlyAssetCountOutputTypeCountWishlistArgs;
};

/**
 * JewerlyAssetCountOutputType without action
 */
export type JewerlyAssetCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JewerlyAssetCountOutputType
   */
  select?: Prisma.JewerlyAssetCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * JewerlyAssetCountOutputType without action
 */
export type JewerlyAssetCountOutputTypeCountReviewArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ReviewWhereInput;
};

/**
 * JewerlyAssetCountOutputType without action
 */
export type JewerlyAssetCountOutputTypeCountNotificationArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.NotificationWhereInput;
};

/**
 * JewerlyAssetCountOutputType without action
 */
export type JewerlyAssetCountOutputTypeCountWishlistArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.WishlistWhereInput;
};

export type JewerlyAssetSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    title?: boolean;
    description?: boolean;
    price?: boolean;
    image_url?: boolean;
    category_id?: boolean;
    currency?: boolean;
    categoryId?: boolean;
    userId?: boolean;
    created_at?: boolean;
    updated_at?: boolean;
    Category?: boolean | Prisma.JewerlyAsset$CategoryArgs<ExtArgs>;
    User?: boolean | Prisma.JewerlyAsset$UserArgs<ExtArgs>;
    Review?: boolean | Prisma.JewerlyAsset$ReviewArgs<ExtArgs>;
    Notification?: boolean | Prisma.JewerlyAsset$NotificationArgs<ExtArgs>;
    Wishlist?: boolean | Prisma.JewerlyAsset$WishlistArgs<ExtArgs>;
    _count?: boolean | Prisma.JewerlyAssetCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['jewerlyAsset']
>;

export type JewerlyAssetSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    title?: boolean;
    description?: boolean;
    price?: boolean;
    image_url?: boolean;
    category_id?: boolean;
    currency?: boolean;
    categoryId?: boolean;
    userId?: boolean;
    created_at?: boolean;
    updated_at?: boolean;
    Category?: boolean | Prisma.JewerlyAsset$CategoryArgs<ExtArgs>;
    User?: boolean | Prisma.JewerlyAsset$UserArgs<ExtArgs>;
  },
  ExtArgs['result']['jewerlyAsset']
>;

export type JewerlyAssetSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    title?: boolean;
    description?: boolean;
    price?: boolean;
    image_url?: boolean;
    category_id?: boolean;
    currency?: boolean;
    categoryId?: boolean;
    userId?: boolean;
    created_at?: boolean;
    updated_at?: boolean;
    Category?: boolean | Prisma.JewerlyAsset$CategoryArgs<ExtArgs>;
    User?: boolean | Prisma.JewerlyAsset$UserArgs<ExtArgs>;
  },
  ExtArgs['result']['jewerlyAsset']
>;

export type JewerlyAssetSelectScalar = {
  id?: boolean;
  title?: boolean;
  description?: boolean;
  price?: boolean;
  image_url?: boolean;
  category_id?: boolean;
  currency?: boolean;
  categoryId?: boolean;
  userId?: boolean;
  created_at?: boolean;
  updated_at?: boolean;
};

export type JewerlyAssetOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | 'id'
  | 'title'
  | 'description'
  | 'price'
  | 'image_url'
  | 'category_id'
  | 'currency'
  | 'categoryId'
  | 'userId'
  | 'created_at'
  | 'updated_at',
  ExtArgs['result']['jewerlyAsset']
>;
export type JewerlyAssetInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  Category?: boolean | Prisma.JewerlyAsset$CategoryArgs<ExtArgs>;
  User?: boolean | Prisma.JewerlyAsset$UserArgs<ExtArgs>;
  Review?: boolean | Prisma.JewerlyAsset$ReviewArgs<ExtArgs>;
  Notification?: boolean | Prisma.JewerlyAsset$NotificationArgs<ExtArgs>;
  Wishlist?: boolean | Prisma.JewerlyAsset$WishlistArgs<ExtArgs>;
  _count?: boolean | Prisma.JewerlyAssetCountOutputTypeDefaultArgs<ExtArgs>;
};
export type JewerlyAssetIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  Category?: boolean | Prisma.JewerlyAsset$CategoryArgs<ExtArgs>;
  User?: boolean | Prisma.JewerlyAsset$UserArgs<ExtArgs>;
};
export type JewerlyAssetIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  Category?: boolean | Prisma.JewerlyAsset$CategoryArgs<ExtArgs>;
  User?: boolean | Prisma.JewerlyAsset$UserArgs<ExtArgs>;
};

export type $JewerlyAssetPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: 'JewerlyAsset';
  objects: {
    Category: Prisma.$CategoryPayload<ExtArgs> | null;
    User: Prisma.$UserPayload<ExtArgs> | null;
    Review: Prisma.$ReviewPayload<ExtArgs>[];
    Notification: Prisma.$NotificationPayload<ExtArgs>[];
    Wishlist: Prisma.$WishlistPayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      title: string;
      description: string;
      price: number;
      image_url: string | null;
      category_id: string;
      currency: string;
      categoryId: string | null;
      userId: string | null;
      created_at: Date;
      updated_at: Date;
    },
    ExtArgs['result']['jewerlyAsset']
  >;
  composites: {};
};

export type JewerlyAssetGetPayload<
  S extends boolean | null | undefined | JewerlyAssetDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$JewerlyAssetPayload, S>;

export type JewerlyAssetCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  JewerlyAssetFindManyArgs,
  'select' | 'include' | 'distinct' | 'omit'
> & {
  select?: JewerlyAssetCountAggregateInputType | true;
};

export interface JewerlyAssetDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>['model']['JewerlyAsset'];
    meta: { name: 'JewerlyAsset' };
  };
  /**
   * Find zero or one JewerlyAsset that matches the filter.
   * @param {JewerlyAssetFindUniqueArgs} args - Arguments to find a JewerlyAsset
   * @example
   * // Get one JewerlyAsset
   * const jewerlyAsset = await prisma.jewerlyAsset.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends JewerlyAssetFindUniqueArgs>(
    args: Prisma.SelectSubset<T, JewerlyAssetFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__JewerlyAssetClient<
    runtime.Types.Result.GetResult<
      Prisma.$JewerlyAssetPayload<ExtArgs>,
      T,
      'findUnique',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one JewerlyAsset that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {JewerlyAssetFindUniqueOrThrowArgs} args - Arguments to find a JewerlyAsset
   * @example
   * // Get one JewerlyAsset
   * const jewerlyAsset = await prisma.jewerlyAsset.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends JewerlyAssetFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, JewerlyAssetFindUniqueOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__JewerlyAssetClient<
    runtime.Types.Result.GetResult<
      Prisma.$JewerlyAssetPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first JewerlyAsset that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JewerlyAssetFindFirstArgs} args - Arguments to find a JewerlyAsset
   * @example
   * // Get one JewerlyAsset
   * const jewerlyAsset = await prisma.jewerlyAsset.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends JewerlyAssetFindFirstArgs>(
    args?: Prisma.SelectSubset<T, JewerlyAssetFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__JewerlyAssetClient<
    runtime.Types.Result.GetResult<
      Prisma.$JewerlyAssetPayload<ExtArgs>,
      T,
      'findFirst',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first JewerlyAsset that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JewerlyAssetFindFirstOrThrowArgs} args - Arguments to find a JewerlyAsset
   * @example
   * // Get one JewerlyAsset
   * const jewerlyAsset = await prisma.jewerlyAsset.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends JewerlyAssetFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, JewerlyAssetFindFirstOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__JewerlyAssetClient<
    runtime.Types.Result.GetResult<
      Prisma.$JewerlyAssetPayload<ExtArgs>,
      T,
      'findFirstOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more JewerlyAssets that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JewerlyAssetFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all JewerlyAssets
   * const jewerlyAssets = await prisma.jewerlyAsset.findMany()
   *
   * // Get first 10 JewerlyAssets
   * const jewerlyAssets = await prisma.jewerlyAsset.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const jewerlyAssetWithIdOnly = await prisma.jewerlyAsset.findMany({ select: { id: true } })
   *
   */
  findMany<T extends JewerlyAssetFindManyArgs>(
    args?: Prisma.SelectSubset<T, JewerlyAssetFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$JewerlyAssetPayload<ExtArgs>,
      T,
      'findMany',
      GlobalOmitOptions
    >
  >;

  /**
   * Create a JewerlyAsset.
   * @param {JewerlyAssetCreateArgs} args - Arguments to create a JewerlyAsset.
   * @example
   * // Create one JewerlyAsset
   * const JewerlyAsset = await prisma.jewerlyAsset.create({
   *   data: {
   *     // ... data to create a JewerlyAsset
   *   }
   * })
   *
   */
  create<T extends JewerlyAssetCreateArgs>(
    args: Prisma.SelectSubset<T, JewerlyAssetCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__JewerlyAssetClient<
    runtime.Types.Result.GetResult<
      Prisma.$JewerlyAssetPayload<ExtArgs>,
      T,
      'create',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many JewerlyAssets.
   * @param {JewerlyAssetCreateManyArgs} args - Arguments to create many JewerlyAssets.
   * @example
   * // Create many JewerlyAssets
   * const jewerlyAsset = await prisma.jewerlyAsset.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends JewerlyAssetCreateManyArgs>(
    args?: Prisma.SelectSubset<T, JewerlyAssetCreateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many JewerlyAssets and returns the data saved in the database.
   * @param {JewerlyAssetCreateManyAndReturnArgs} args - Arguments to create many JewerlyAssets.
   * @example
   * // Create many JewerlyAssets
   * const jewerlyAsset = await prisma.jewerlyAsset.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many JewerlyAssets and only return the `id`
   * const jewerlyAssetWithIdOnly = await prisma.jewerlyAsset.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends JewerlyAssetCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, JewerlyAssetCreateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$JewerlyAssetPayload<ExtArgs>,
      T,
      'createManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a JewerlyAsset.
   * @param {JewerlyAssetDeleteArgs} args - Arguments to delete one JewerlyAsset.
   * @example
   * // Delete one JewerlyAsset
   * const JewerlyAsset = await prisma.jewerlyAsset.delete({
   *   where: {
   *     // ... filter to delete one JewerlyAsset
   *   }
   * })
   *
   */
  delete<T extends JewerlyAssetDeleteArgs>(
    args: Prisma.SelectSubset<T, JewerlyAssetDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__JewerlyAssetClient<
    runtime.Types.Result.GetResult<
      Prisma.$JewerlyAssetPayload<ExtArgs>,
      T,
      'delete',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one JewerlyAsset.
   * @param {JewerlyAssetUpdateArgs} args - Arguments to update one JewerlyAsset.
   * @example
   * // Update one JewerlyAsset
   * const jewerlyAsset = await prisma.jewerlyAsset.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends JewerlyAssetUpdateArgs>(
    args: Prisma.SelectSubset<T, JewerlyAssetUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__JewerlyAssetClient<
    runtime.Types.Result.GetResult<
      Prisma.$JewerlyAssetPayload<ExtArgs>,
      T,
      'update',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more JewerlyAssets.
   * @param {JewerlyAssetDeleteManyArgs} args - Arguments to filter JewerlyAssets to delete.
   * @example
   * // Delete a few JewerlyAssets
   * const { count } = await prisma.jewerlyAsset.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends JewerlyAssetDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, JewerlyAssetDeleteManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more JewerlyAssets.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JewerlyAssetUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many JewerlyAssets
   * const jewerlyAsset = await prisma.jewerlyAsset.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends JewerlyAssetUpdateManyArgs>(
    args: Prisma.SelectSubset<T, JewerlyAssetUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more JewerlyAssets and returns the data updated in the database.
   * @param {JewerlyAssetUpdateManyAndReturnArgs} args - Arguments to update many JewerlyAssets.
   * @example
   * // Update many JewerlyAssets
   * const jewerlyAsset = await prisma.jewerlyAsset.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more JewerlyAssets and only return the `id`
   * const jewerlyAssetWithIdOnly = await prisma.jewerlyAsset.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends JewerlyAssetUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, JewerlyAssetUpdateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$JewerlyAssetPayload<ExtArgs>,
      T,
      'updateManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one JewerlyAsset.
   * @param {JewerlyAssetUpsertArgs} args - Arguments to update or create a JewerlyAsset.
   * @example
   * // Update or create a JewerlyAsset
   * const jewerlyAsset = await prisma.jewerlyAsset.upsert({
   *   create: {
   *     // ... data to create a JewerlyAsset
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the JewerlyAsset we want to update
   *   }
   * })
   */
  upsert<T extends JewerlyAssetUpsertArgs>(
    args: Prisma.SelectSubset<T, JewerlyAssetUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__JewerlyAssetClient<
    runtime.Types.Result.GetResult<
      Prisma.$JewerlyAssetPayload<ExtArgs>,
      T,
      'upsert',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of JewerlyAssets.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JewerlyAssetCountArgs} args - Arguments to filter JewerlyAssets to count.
   * @example
   * // Count the number of JewerlyAssets
   * const count = await prisma.jewerlyAsset.count({
   *   where: {
   *     // ... the filter for the JewerlyAssets we want to count
   *   }
   * })
   **/
  count<T extends JewerlyAssetCountArgs>(
    args?: Prisma.Subset<T, JewerlyAssetCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<
            T['select'],
            JewerlyAssetCountAggregateOutputType
          >
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a JewerlyAsset.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JewerlyAssetAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends JewerlyAssetAggregateArgs>(
    args: Prisma.Subset<T, JewerlyAssetAggregateArgs>,
  ): Prisma.PrismaPromise<GetJewerlyAssetAggregateType<T>>;

  /**
   * Group by JewerlyAsset.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JewerlyAssetGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends JewerlyAssetGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: JewerlyAssetGroupByArgs['orderBy'] }
      : { orderBy?: JewerlyAssetGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    'Field ',
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : 'take' extends Prisma.Keys<T>
          ? 'orderBy' extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : 'skip' extends Prisma.Keys<T>
            ? 'orderBy' extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, JewerlyAssetGroupByArgs, OrderByArg> &
      InputErrors,
  ): {} extends InputErrors
    ? GetJewerlyAssetGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the JewerlyAsset model
   */
  readonly fields: JewerlyAssetFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for JewerlyAsset.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__JewerlyAssetClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: 'PrismaPromise';
  Category<T extends Prisma.JewerlyAsset$CategoryArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.JewerlyAsset$CategoryArgs<ExtArgs>>,
  ): Prisma.Prisma__CategoryClient<
    runtime.Types.Result.GetResult<
      Prisma.$CategoryPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  User<T extends Prisma.JewerlyAsset$UserArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.JewerlyAsset$UserArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  Review<T extends Prisma.JewerlyAsset$ReviewArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.JewerlyAsset$ReviewArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ReviewPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  Notification<T extends Prisma.JewerlyAsset$NotificationArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.JewerlyAsset$NotificationArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$NotificationPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  Wishlist<T extends Prisma.JewerlyAsset$WishlistArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.JewerlyAsset$WishlistArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$WishlistPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the JewerlyAsset model
 */
export interface JewerlyAssetFieldRefs {
  readonly id: Prisma.FieldRef<'JewerlyAsset', 'String'>;
  readonly title: Prisma.FieldRef<'JewerlyAsset', 'String'>;
  readonly description: Prisma.FieldRef<'JewerlyAsset', 'String'>;
  readonly price: Prisma.FieldRef<'JewerlyAsset', 'Int'>;
  readonly image_url: Prisma.FieldRef<'JewerlyAsset', 'String'>;
  readonly category_id: Prisma.FieldRef<'JewerlyAsset', 'String'>;
  readonly currency: Prisma.FieldRef<'JewerlyAsset', 'String'>;
  readonly categoryId: Prisma.FieldRef<'JewerlyAsset', 'String'>;
  readonly userId: Prisma.FieldRef<'JewerlyAsset', 'String'>;
  readonly created_at: Prisma.FieldRef<'JewerlyAsset', 'DateTime'>;
  readonly updated_at: Prisma.FieldRef<'JewerlyAsset', 'DateTime'>;
}

// Custom InputTypes
/**
 * JewerlyAsset findUnique
 */
export type JewerlyAssetFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JewerlyAsset
   */
  select?: Prisma.JewerlyAssetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JewerlyAsset
   */
  omit?: Prisma.JewerlyAssetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JewerlyAssetInclude<ExtArgs> | null;
  /**
   * Filter, which JewerlyAsset to fetch.
   */
  where: Prisma.JewerlyAssetWhereUniqueInput;
};

/**
 * JewerlyAsset findUniqueOrThrow
 */
export type JewerlyAssetFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JewerlyAsset
   */
  select?: Prisma.JewerlyAssetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JewerlyAsset
   */
  omit?: Prisma.JewerlyAssetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JewerlyAssetInclude<ExtArgs> | null;
  /**
   * Filter, which JewerlyAsset to fetch.
   */
  where: Prisma.JewerlyAssetWhereUniqueInput;
};

/**
 * JewerlyAsset findFirst
 */
export type JewerlyAssetFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JewerlyAsset
   */
  select?: Prisma.JewerlyAssetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JewerlyAsset
   */
  omit?: Prisma.JewerlyAssetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JewerlyAssetInclude<ExtArgs> | null;
  /**
   * Filter, which JewerlyAsset to fetch.
   */
  where?: Prisma.JewerlyAssetWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of JewerlyAssets to fetch.
   */
  orderBy?:
    | Prisma.JewerlyAssetOrderByWithRelationInput
    | Prisma.JewerlyAssetOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for JewerlyAssets.
   */
  cursor?: Prisma.JewerlyAssetWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` JewerlyAssets from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` JewerlyAssets.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of JewerlyAssets.
   */
  distinct?:
    | Prisma.JewerlyAssetScalarFieldEnum
    | Prisma.JewerlyAssetScalarFieldEnum[];
};

/**
 * JewerlyAsset findFirstOrThrow
 */
export type JewerlyAssetFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JewerlyAsset
   */
  select?: Prisma.JewerlyAssetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JewerlyAsset
   */
  omit?: Prisma.JewerlyAssetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JewerlyAssetInclude<ExtArgs> | null;
  /**
   * Filter, which JewerlyAsset to fetch.
   */
  where?: Prisma.JewerlyAssetWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of JewerlyAssets to fetch.
   */
  orderBy?:
    | Prisma.JewerlyAssetOrderByWithRelationInput
    | Prisma.JewerlyAssetOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for JewerlyAssets.
   */
  cursor?: Prisma.JewerlyAssetWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` JewerlyAssets from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` JewerlyAssets.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of JewerlyAssets.
   */
  distinct?:
    | Prisma.JewerlyAssetScalarFieldEnum
    | Prisma.JewerlyAssetScalarFieldEnum[];
};

/**
 * JewerlyAsset findMany
 */
export type JewerlyAssetFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JewerlyAsset
   */
  select?: Prisma.JewerlyAssetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JewerlyAsset
   */
  omit?: Prisma.JewerlyAssetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JewerlyAssetInclude<ExtArgs> | null;
  /**
   * Filter, which JewerlyAssets to fetch.
   */
  where?: Prisma.JewerlyAssetWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of JewerlyAssets to fetch.
   */
  orderBy?:
    | Prisma.JewerlyAssetOrderByWithRelationInput
    | Prisma.JewerlyAssetOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing JewerlyAssets.
   */
  cursor?: Prisma.JewerlyAssetWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` JewerlyAssets from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` JewerlyAssets.
   */
  skip?: number;
  distinct?:
    | Prisma.JewerlyAssetScalarFieldEnum
    | Prisma.JewerlyAssetScalarFieldEnum[];
};

/**
 * JewerlyAsset create
 */
export type JewerlyAssetCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JewerlyAsset
   */
  select?: Prisma.JewerlyAssetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JewerlyAsset
   */
  omit?: Prisma.JewerlyAssetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JewerlyAssetInclude<ExtArgs> | null;
  /**
   * The data needed to create a JewerlyAsset.
   */
  data: Prisma.XOR<
    Prisma.JewerlyAssetCreateInput,
    Prisma.JewerlyAssetUncheckedCreateInput
  >;
};

/**
 * JewerlyAsset createMany
 */
export type JewerlyAssetCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many JewerlyAssets.
   */
  data:
    | Prisma.JewerlyAssetCreateManyInput
    | Prisma.JewerlyAssetCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * JewerlyAsset createManyAndReturn
 */
export type JewerlyAssetCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JewerlyAsset
   */
  select?: Prisma.JewerlyAssetSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the JewerlyAsset
   */
  omit?: Prisma.JewerlyAssetOmit<ExtArgs> | null;
  /**
   * The data used to create many JewerlyAssets.
   */
  data:
    | Prisma.JewerlyAssetCreateManyInput
    | Prisma.JewerlyAssetCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JewerlyAssetIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * JewerlyAsset update
 */
export type JewerlyAssetUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JewerlyAsset
   */
  select?: Prisma.JewerlyAssetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JewerlyAsset
   */
  omit?: Prisma.JewerlyAssetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JewerlyAssetInclude<ExtArgs> | null;
  /**
   * The data needed to update a JewerlyAsset.
   */
  data: Prisma.XOR<
    Prisma.JewerlyAssetUpdateInput,
    Prisma.JewerlyAssetUncheckedUpdateInput
  >;
  /**
   * Choose, which JewerlyAsset to update.
   */
  where: Prisma.JewerlyAssetWhereUniqueInput;
};

/**
 * JewerlyAsset updateMany
 */
export type JewerlyAssetUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update JewerlyAssets.
   */
  data: Prisma.XOR<
    Prisma.JewerlyAssetUpdateManyMutationInput,
    Prisma.JewerlyAssetUncheckedUpdateManyInput
  >;
  /**
   * Filter which JewerlyAssets to update
   */
  where?: Prisma.JewerlyAssetWhereInput;
  /**
   * Limit how many JewerlyAssets to update.
   */
  limit?: number;
};

/**
 * JewerlyAsset updateManyAndReturn
 */
export type JewerlyAssetUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JewerlyAsset
   */
  select?: Prisma.JewerlyAssetSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the JewerlyAsset
   */
  omit?: Prisma.JewerlyAssetOmit<ExtArgs> | null;
  /**
   * The data used to update JewerlyAssets.
   */
  data: Prisma.XOR<
    Prisma.JewerlyAssetUpdateManyMutationInput,
    Prisma.JewerlyAssetUncheckedUpdateManyInput
  >;
  /**
   * Filter which JewerlyAssets to update
   */
  where?: Prisma.JewerlyAssetWhereInput;
  /**
   * Limit how many JewerlyAssets to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JewerlyAssetIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * JewerlyAsset upsert
 */
export type JewerlyAssetUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JewerlyAsset
   */
  select?: Prisma.JewerlyAssetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JewerlyAsset
   */
  omit?: Prisma.JewerlyAssetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JewerlyAssetInclude<ExtArgs> | null;
  /**
   * The filter to search for the JewerlyAsset to update in case it exists.
   */
  where: Prisma.JewerlyAssetWhereUniqueInput;
  /**
   * In case the JewerlyAsset found by the `where` argument doesn't exist, create a new JewerlyAsset with this data.
   */
  create: Prisma.XOR<
    Prisma.JewerlyAssetCreateInput,
    Prisma.JewerlyAssetUncheckedCreateInput
  >;
  /**
   * In case the JewerlyAsset was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.JewerlyAssetUpdateInput,
    Prisma.JewerlyAssetUncheckedUpdateInput
  >;
};

/**
 * JewerlyAsset delete
 */
export type JewerlyAssetDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JewerlyAsset
   */
  select?: Prisma.JewerlyAssetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JewerlyAsset
   */
  omit?: Prisma.JewerlyAssetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JewerlyAssetInclude<ExtArgs> | null;
  /**
   * Filter which JewerlyAsset to delete.
   */
  where: Prisma.JewerlyAssetWhereUniqueInput;
};

/**
 * JewerlyAsset deleteMany
 */
export type JewerlyAssetDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which JewerlyAssets to delete
   */
  where?: Prisma.JewerlyAssetWhereInput;
  /**
   * Limit how many JewerlyAssets to delete.
   */
  limit?: number;
};

/**
 * JewerlyAsset.Category
 */
export type JewerlyAsset$CategoryArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Category
   */
  select?: Prisma.CategorySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Category
   */
  omit?: Prisma.CategoryOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CategoryInclude<ExtArgs> | null;
  where?: Prisma.CategoryWhereInput;
};

/**
 * JewerlyAsset.User
 */
export type JewerlyAsset$UserArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  where?: Prisma.UserWhereInput;
};

/**
 * JewerlyAsset.Review
 */
export type JewerlyAsset$ReviewArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Review
   */
  select?: Prisma.ReviewSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Review
   */
  omit?: Prisma.ReviewOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReviewInclude<ExtArgs> | null;
  where?: Prisma.ReviewWhereInput;
  orderBy?:
    | Prisma.ReviewOrderByWithRelationInput
    | Prisma.ReviewOrderByWithRelationInput[];
  cursor?: Prisma.ReviewWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.ReviewScalarFieldEnum | Prisma.ReviewScalarFieldEnum[];
};

/**
 * JewerlyAsset.Notification
 */
export type JewerlyAsset$NotificationArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Notification
   */
  select?: Prisma.NotificationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Notification
   */
  omit?: Prisma.NotificationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NotificationInclude<ExtArgs> | null;
  where?: Prisma.NotificationWhereInput;
  orderBy?:
    | Prisma.NotificationOrderByWithRelationInput
    | Prisma.NotificationOrderByWithRelationInput[];
  cursor?: Prisma.NotificationWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.NotificationScalarFieldEnum
    | Prisma.NotificationScalarFieldEnum[];
};

/**
 * JewerlyAsset.Wishlist
 */
export type JewerlyAsset$WishlistArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Wishlist
   */
  select?: Prisma.WishlistSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Wishlist
   */
  omit?: Prisma.WishlistOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WishlistInclude<ExtArgs> | null;
  where?: Prisma.WishlistWhereInput;
  orderBy?:
    | Prisma.WishlistOrderByWithRelationInput
    | Prisma.WishlistOrderByWithRelationInput[];
  cursor?: Prisma.WishlistWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.WishlistScalarFieldEnum | Prisma.WishlistScalarFieldEnum[];
};

/**
 * JewerlyAsset without action
 */
export type JewerlyAssetDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JewerlyAsset
   */
  select?: Prisma.JewerlyAssetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the JewerlyAsset
   */
  omit?: Prisma.JewerlyAssetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JewerlyAssetInclude<ExtArgs> | null;
};
